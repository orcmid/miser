SML.txt 0.0.11                       UTF-8                       dh:2017-02-23
----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                           The Miser Project Code
                           ======================
                            
   <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/SML.txt>

                 SML MOCKUP PROOF-OF-CONCEPT DEMONSTRATIONS
                 ------------------------------------------
              
    Standard SML of New Jersey (SML/NJ) is used for demonstration
    of the essential characteristics of Miser obs and the universal
    computational functions on obs, obap.ap(p,x) and obap.eval(exp).
    
    The mockup is used for proof-of-concept.  It is not intended to
    become a production implementation.
    
    This demonstration is expedient in several respects.  The
    SML/NJ datatype implementation directly satisfies correctness
    requirements for obs.  And the SML/NJ REPL (Read-Evaluate-
    Print Loop) is automatically available for use as a test
    harness and front end.

    The objective will be demonstration of an oFrugal REPL with
    standard parsing and pretty-printed output presentation.  The
    operation will be limited to ASCII code points in input-output
    texts although Unicode is required of complete implementations.
         
MANIFEST

       SML.txt 
           this manifest and job-jar file
         
 tutorials/  
           subfolder of tutorial materials supporting the SML
           mockups
          
        OB.sig.sml
           Definition of the SML/NJ signature for manifestation of
           ‹ob› primitive notions.
        
       ob.sml
          Manifestation of ‹ob› primitive notions via SML/NJ abstract
          data type signature and structure definition.
           
     OBAP.sig.sml
          Definition of the SML/NJ signature for manifestation of
          ‹ob› as extended for obap.ap(p,x) and obap.eval(exp), along
          with lindies and additional primitive individuals.
          
     obap.sml
          Manifestation of ‹ob› extended for obap.ap(p,x) and obap.eval(exp)
          in accordance of obaptheory.txt.
                  
  obcheck.sml 
          Test script that checks the abstract data type's
          mathematical characterization and manifestation via
          the SML/NJ ob.sml representation.
          
  obapcheck.sml
          Test script that checks the functioning of obap.sml definitions.
          
     obap.obcheck.sml
          Test script that checks the preservation of ob.sml definitions
          in the extended obap.sml manifestation.

 combdemo.sml
          Demonstration of the basic combinators expressed as interpretation-
          preserving oMiser applicative scripts.

Ycombdemo.sml
          Demonstration of the oMiser script that provides an interpretation-
          preserving interpretation as a Y-Combinator.
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

                       Copyright 2017 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 
TODO
     
  * Account for the challenge of avoiding forward references and preservation
    of identity conditions for preservation of quasi-Platonism under
    decentralized, distributed operation.  (Is this a case of referential
    integrity?)
       
  * Address the run-time exception problem, especially as it will hit us
    with respect to strong typing.
    
  * Look at the non-irreversible architectual change consideration here
    around typing and also the distribution mechanism.
    
  * Account for oMiser as a performance case within a broader set or
    hierarchy of richer (not just sugar) arrangements in which the
    oMiser level is distinguished.  (So there are higher-level forms
    of apply and eval above and beyond obap.ap and obap.eval)
    
  * Raise the fact that, with oMiser, so long as well-definedness is
    maintained, the application of an individual can involve what would
    be side-effects except they are never revealed.  This includes
    caching of things and also optimization behind the scenes.  Also,
    output counts, but not input.
    
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 0.0.11 2018-02-23-09:30 Touch up synopsis and account for combdemo.sml and
        its Ycombdemo fork.
 0.0.10 2017-10-09-11:24 Adust TODOs.  Emphasize SML use for proof-of-concept.
       Bring current.  Correct GitHub location.
 0.0.9 2017-09-13-17:03 More TODOs. Remove obadt.sml and obadtcheck.sml
       after refactoring the essentials to OB.sig.sml, ob.sml, and obcheck.sml
 0.0.8 2017-09-05-21:19 Add obadtcheck.sml for counterpart checking of the
       obadt.sml computational abstract data type manifestation.
 0.0.7 2017-09-05-18:16 Add obadt.sml for the SML/NJ form of encapsulation.
 0.0.6 2017-08-30-12:53 Rename obtest.sml to obcheck.sml and add simple
       confirmation checks corresponding to obtheory Ob1-Ob8
 0.0.5 2017-08-27-15:48 Make ob.sml an interpretation of obtheory and have
       that be explicit in the ob.sml file now.  Refactor so that obtest
       is now just for informally-argued confirmation of the interpretation.
 0.0.4 2017-08-23-10:08 Remove accomplished TODOs, add need to extract and
       elevate the <ob> miser-theory for the Ob set.
 0.0.3 2017-08-19-12:11 Add TODOs and advancing treatment of the
       SML/NJ manifestation as a model of the theoretical <ob> structure.
 0.0.2 2017-08-06-08:55 Add more work items on goals for what the 
       SML mockup and the mathematical connections are intended to
       demonstrate.
 0.0.1 2017-08-05-19:54 Move tutorial-intended screen captures to a
       tutorials subfolder
 0.0.0 2017-08-04-12:38 Create placeholder and initial job jar for
       oMiser mockup development.

                         *** end of SML.txt ***
                         