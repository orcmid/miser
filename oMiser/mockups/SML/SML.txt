SML.txt 0.0.2                        UTF-8                        dh:2017-08-06

                           The Miser Project Code
                           ======================
                            
            <https://github.com/orcmid/miser/oMiser/mockups/SML>

                 SML MOCKUP EXPERIMENTAL DEMONSTRATIONS
                 --------------------------------------
              
    Standard SML of New Jersey (SML/NJ) is used for demonstration
    of the essential characteristics of Miser obs and the universal
    computational function on obs.
    
    This demonstration is expedient in several respects.  The
    SML/NJ datatype implementation assures certain correctness
    requirements for obs.  And the SML/NJ REPL (Read-Evaluate-
    Print Loop) is automatically available for use as a test
    harness and front end.
         
MANIFEST

       SML.txt 
           this manifest and job-jar file
         
 tutorials/  
          subfolder of tutorial materials supporting the SML
          mockups
        
        ob.sml
           Definitions of the datatype and functions that manifest
           the structure <ob>.
        
    obtest.sml 
           Test script that connects the abstract data type's
           mathematical characterization and manifestation via
           the SML/NJ representation.
         
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

                       Copyright 2017 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 
TODO
   
  * Use obtest to contrast confirmation by computation and the abstract
    mathematical conditions that must not be contradicted.
    
  * Introduce the constructivity constraints that prevent loops.  This
    will raise some interesting problems when obs can be named and
    how foreward reference is disallowed.  This, along with integrity
    of identification, will be a challenge in the preservation of
    quasi-Platonism under decentralized, distributed operation.  (Is
    this a form of referential integrity?)
    
  * Introduce the initial conversation on identity around individuals,
    including their being well-defined and immutable.
    
  * Introduce literals so that it is possible to see what we are doing
    and also demonstrate some things about representation in the absence
    of valuable types (such as strings), even though we will not get
    any farther until types can work, perhaps beyond the oMiser level.
    
  * Address the run-time exception problem, especially as it will hit us
    with respect to strong typing.
    
  * Look at the non-irreversible architectual change consideration here
    around typing and also the distribution mechanism.
    
  * Account for oMiser as a performance case within a broader set or
    hierarchy of richer (not just sugar) arrangements in which the
    oMiser level is distinguished.  (So there are higher-level forms
    of apply and eval above and beyond ob.ap and ob.ev.)
    
  * Raise the fact that, with oMiser, so long as well-definedness is
    maintained, the application of an individual can involve what would
    be side-effects except they are never revealed.  This includes
    caching of things, too.
    
  * The oFrugal arrangement is about hosting.  Hold onto that notion.
     
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 0.0.2 2017-08-06-08:55 Add more work items on goals for what the 
       SML mockup and the mathematical connections are intended to
       demonstrate.
 0.0.1 2017-08-05-19:54 Move tutorial-intended screen captures to a
       tutorials subfolder
 0.0.0 2017-08-04-12:38 Create placeholder and initial job jar for
       oMiser mockup development.

                         *** end of SML.txt ***
                         