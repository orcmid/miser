SML-setup.txt 0.0.4                  UTF-8                       dh:2020-08-12
----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                           The Miser Project Code
                           ======================

<https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/SML-setup.txt>

                    INSTALLATION OF SML/NJ UNDER WINDOWS
                    ------------------------------------

    Standard ML of New Jersey (SML/NJ) is used for the initial mockups and
    proof-of-concept demonstrations of oMiser and oFrugal operations.  This
    is particularly convenient because the functional-programming model of
    ML is well-suited to the easy expression of the ‹ob› computational model
    and the oFrugal Read-Eval-Print Loop (REPL).

    The primary implementation of SML/NJ used for Miser Project mockups is
    that for Microsoft Windows.  Other implementations will also be usable.
    The following information focuses on Windows usage so that anyone can
    confirm and replicate the precise development of SML mockups.

    Beside the installation of an SML/NJ implementation, there are three other
    facets to the development and confirmation of mockups.

        * Installation of SML/NJ software (sections 1 and 2 below).
        * Selection of an editor
        * Cloning of the oMiser GitHub materials
        * Using the SML/NJ REPL in Windows Console sessions

    You may also require some materials on the ML language and use of the
    SML/NJ implementation to gain more understanding of how the SML mockups
    work and trouble-shooting any difficulties you might have in replicating
    successful tests and operations of your own.

 1. LOCATING SML/NJ DISTRIBUTIONS

    Installers for SML/NJ are found via the official Standard ML of New
    Jersey site, <https://www.smlnj.org>.  That page will resemble the image
    <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/smlnj.org-2019-04-10-1359-HomePage.png>.

    Under the Downloads topic, note the latest release in the "What's New"
    list.  E.g., "[12/21/18] Version 110.85 is released. ... ."

    Use the Downloads title to link to the list of version download sets,
    <https://www.smlnj.org/dist/working/index.html>.  The page will resemble
    <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/smlnj.org-2019-04-10-1406-Versions.png>.

    For the latest (such as 110.85), select the Software Links "files" link
    (e.g., to https://www.smlnj.org/dist/working/110.85/index.html) for that
    version. <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/smlnj.org-2019-04-10-1411-110.85-Files.png>.

    For generic Unix (including Linux) and macOS, follow those instructions.
    See <http://smlnj.org/install/index.html> for those.

    For the Miser Project, Windows versions are used for all of the mockups,
    tests, and proof-of-concept demonstrations employing SML/NJ.  Technical
    users will find straightforward adaptations to other platforms.

 2. INSTALLING AN SML/NJ VERSION MSI PACKAGE FOR WINDOWS

    For Microsoft Windows, the WININSTALL instructions are not very useful.
    Do not worry about it.  Click on the link to the MSI file (e.g.,
    smlnj-110.85.msi).  The download can be to a default downloads directory
    or another location that you prefer for this purpose.
    <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/smlnj.org-2019-04-10-1427-Downloading.png>.

    If there is no smlnj-xxx.yy.msi file for the latest version, it may be
    preferable to download the most-recent older SML/NJ release that has one.

    Navigate to the PC file-system location where the MSI file is downloaded.
    E.g., <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/smlnj.org-2019-04-10-1436-install.png>.

    Double-click on the file in the File Explorer.  You may receive a warning
    that the file is not digitally signed and might be dangerous.  You have
    a decision to make.  I scanned the file with Windows Defender and there
    were no "known" threats.  So ...
    <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/SMLNJ-110.85-2019-04-10-1623-install.png>

    Choose your own location for the install or continue with the default.
    <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/SMLNJ-110.85-2019-04-10-1633-install.png>

    If you continue with a successful installation, you will find the program
    on the all-programs list (here found from a Windows 10 Start Page)
    <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/SMLNJ-110.85-2019-04-10-1643-install.png>

    This is a good opportunity to add the tile to your Start Page.  On
    finding it added there, place it where you like and then click on it.
    <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/SMLNJ-110.85-2019-04-10-1650-install.png>

    If all is well you'll see the first-run of the SML/NJ processor in a
    console window.  Type "Hello World"; and ENTER after the ";".  See the
    response.  Then type Ctrl-Z.  When you follow that with ENTER, the
    console will close.
    <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/SMLNJ-110.85-2019-04-10-1721-1stRun.png>

 3. NEXT STEPS

    We've now found, installed, and confirmed installation of SML/NJ on
    Microsoft Windows 10.  This will let you replicate the operations that
    the Miser Project author employs.  For operation with SML/NJ there are
    some further steps.

     * Creating an SML/NJ operation setup for running mockups and also
       creating and operating your own creations/modification.  This is
       recommended for any projects you undertake using SML/NJ on Windows.

     * Forking and Cloning the Miser Project GitHub repository so that you
       can operate with it on your own computer, make your own modifications,
       and also merge any updates and additions to the Miser Project files
       when you wish to do so.

     * If you choose, reporting defects, improvement requests, and also
       submitting changes to the project.

 3. NOTES AND REFERENCES

    [Grossman]
        Grossman, Dan.  SML installation.  Video tutorial. (undated).
        Available at
        <https://www.coursera.org/lecture/programming-languages/sml-installation-Gm2WF>
        A modified setup is recommended for the Miser Project that does
        not require learning installation and use of eMacs.  If you're keen
        on that, by all means use the setup described in this and its
        following video.  Either way, (1) the Coursera course is highly
        recommended and (2) the author of the Miser Project employed the
        Miser mockup setup when undertaking this course.

    [Wikipedia2019a]
        Standard ML. Wikipedia entry.  Available at
        <https://en.wikipedia.org/wiki/Standard_ML>

    [Wikipedia2019b]
        ML (programming language).  Wikipedia entry.  Available at
        <https://en.wikipedia.org/wiki/ML_(programming_language)>

    [Wikipedia2019c]
        ISWIM.  Wikipedia entry.  Available at
        <https://en.wikipedia.org/wiki/ISWIM>.

    The Wikipedia articles are rather esoteric and probably not suitable for
    novices (or maybe working software developers).  The ISWIM article is
    cited with regard to ML.  I do not endorse the lineage, although the
    Miser Project was inspired by personal contact with the ISWIM effort in
    the 1960s.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

                  Copyright 2018-2020 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 ATTRIBUTION

   Hamilton, Dennis E. Installation of SML/NJ under Windows.  Miser Theory
   Conception text file SML-setup.txt version 0.0.4 dated 2020-08-12,
    available on the Internet as a version of
   <https://github.com/orcmid/miser/blob/master/oMiser/mockups/SML/SML-setup.txt>

TODO

  * Create a blog-post version of this material and the images, then link
    to it as an alternative.

  * The use of Visual Studio Code (VSCode) applies to all development here
    so there might need to be a higher-level treatment of it.  Or enough
    here to establish it in the load, edit-save-REPL, preserve cycles.

  * Similar ideas apply to use of the SML/NJ REPL in a Windows Console
    session.  CMD.exe should be good enough.

  * There is now, also, the Windows Terminal to consider.

  * There is also common need for SML/NJ installation and setup as a generic
    case, and as applied to oMiser and oFrugal mockups.  This suggests that
    a more generic location is desired for much of this, with it linked from
    here.  nfoTools seems like a better place, and there is still a need to
    have it be viewable outside of the GitHub repository, whether Wiki or
    a docs/ folder.  Issue #33, Need On Ramp and Guard Rails, reflects the
    direction here.

  * Replicate the detailed level of SML-setup.txt in a web format at the
    nfoTools project.  Work through the construction and scaffolding issues
    there.  Maybe borrow from what little has been done for docs here at
    <https://orcmid.github.io/omiser>.


 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


 0.0.4 2020-08-12-16:13 Retract SML-setup.md and lean towards issue #31 on
       Need for On Ramp and Guard Rails.
 0.0.3 2020-08-11-10:38 Manage TODOs, preparing for testing a Markdown flavor
 0.0.2 2019-11-09-11:08 Complete the material, proofing that the image links
       all work.
 0.0.1 2019-04-18-09:57 Add section on downloading and installing SML/NJ on
       Microsoft Windows featuring Windows 10.
 0.0.0 2018-03-24-13:12 Create placeholder and initial job jar for
       recording of setup and operation information used to operate and
       confirm the SML mockups of oMiser and a limited oFrugal REPL

                      *** end of SML-setup.txt ***
