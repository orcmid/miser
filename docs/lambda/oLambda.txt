// oLambda.txt 0.0.1                UTF-8                          2024-06-20
//--|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*
//
//                       OBAP ABSTRACTION FUNCTIONS
//                       ===========================
//
//          <https://orcmid.github.io/miser/lambda/oLambda.txt>
//
//           HAND-COMPILED λ.x and ρ.p ABSTRACTION OPERATIONS
//           ------------------------------------------------
//
//
//       The abstraction operations are introduced in Miser Project Discussion
//       Note #42, <https://github.com/orcmid/miser/discussions/42>.  This
//       oLambda.txt file provides for the manual compilation of the
//       λ.x and ρ.p Frugalese definitions into raw oFrugal ^oLambda and
//       oRec implementations.
//
//       The applicative computational scheme is defined in the file
//       <https://orcmid.github.io/miser/obap/obaptheory.txt>.
//
//       A sketch of oFrugal notation is at
//       <https://orcmid.github.io/miser/oFrugal/sketch.txt>.
//
//       The formal syntax and semantics of oFrugal expressions is at
//       <https://orcmid.github.io/miser/oFrugal/ob-exp.txt>.
//
//       Implementations of σ.s, subst(L, s), and δ.s(P) are relied upon.
//       Their definitions illustrate derivation of applicative-operation
//       scripts <https://orcmid.github.io/miser/lambda/oSigma.txt>.
//
//       See casep development for another demonstration of hand-compiling,
//       <https://orcmid.github.io/miser/oFrugal/casep.txt>.
//
//       This file is meant to be processable by oFrugal.
//
//
//               1. λ-Abstraction
//                  1.1 Heuristic
//                  1.2 Frugalese definition
//                  1.3 oFrugal derivation
 //                 1.4 oFrugal definition
//               2. ρ-Abstraction
//
//
//   1. λ-ABSTRACTION
//
//   1.1 Heuristic
//
//      The heuristic for λ-Abstraction via λ.x S has two rules:
//
//        1. If the ob S has no occurrences of .arg, the abstraction of
//           x from S is given by subst(.arg, x) S.
//
//        2. Otherwise, the abstraction of x from S is given by
//
//                      σ.x subst(` x, x) S.
//
//      These definitions depend on x being a lindy and x not being
//      already enclosed, since it is not in oFrugalese
//
//
//    1.2 Frugalese Definition
//
//      λ.x S = if is-enclosure σ(.arg) S
//              then // no occurrence of .arg
//                   subst(.arg, x) S
//              else σ.x subst(` x, x) S;
//
//    1.3 oFrugal Derivation
//
//      λ =  λx λS //    if is-enclosure σ(.arg) S
//          .ev :: (is-enclosure :: ( σ :: `.arg ) :: S )
//
//              :: `( // then subst(.arg, x) S
//                       (((subst :: `.arg) :: x) :: S)
//                    ::
//                    // else σ.x subst(` x, x) S
//                       (σ :: x) :: ((subst :: ` x) :: x) :: S
//                    ) ;
//
//        = λx // λS    if is-enclosure σ(.arg) S
//          .ev :: (is-enclosure :: ( σ :: `.arg ) :: .arg )
//
//              :: `( // then subst(.arg, x) S
//                       (((subst :: `.arg) :: x) :: .arg)
//                    ::
//                    // else σ.x subst(` x, x) S
//                       (σ :: x) :: ((subst :: ` x) :: x) :: .arg
//                    ) ;
//
//        = // λx λS        if is-enclosure σ(.arg) S
//
//          ((σ :: x):: (subst :: ` x) :: x)
//          ::
//          `( .ev :: (is-enclosure :: ( σ :: `.arg ) :: .arg )
//
//                 :: `( // then subst(.arg, x) S
//                          (((subst :: `.arg) :: x) :: .arg)
//                       ::
//                       // else σ.x subst(` x, x) S
//                          (σ :: x) :: ((subst :: ` x) :: x) :: .arg
//                    )
//              );
//
//      bootstrapping λx in the definition by hand-following the Frugalse
//      definition.  We don't have to go farther because all of the functions
//      signified in the derivation are available.
//
//    1.4 oFrugal Definition

!include "oSigma.txt"

!def ob ^oLambda
        =    (δ.σ :: ^oSigma)
          :: (δ.subst :: ^oSubst)
          :: (δ.is-enclosure :: ^oIsEnclosure)
          ::
          // λx λS        if is-enclosure σ(.arg) S

          ((σ :: x):: (subst :: ` x) :: x)
          ::
          `( .ev :: (is-enclosure :: ( σ :: `.arg ) :: .arg )

                 :: `( // then subst(.arg, x) S
                          (((subst :: `.arg) :: x) :: .arg)
                       ::
                       // else σ.x subst(` x, x) S
                          (σ :: x) :: ((subst :: ` x) :: x) :: .arg
                    )
              );

//   2. ρ-ABSTRACTION
//
//   ***** TBD *****
//
//--|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*
//
//                   Copyright 2024 Dennis E. Hamilton
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//              http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
//--|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*
//
// ATTRIBUTION
//
//   Hamilton, Dennis E. Hand-compiled λ.x and ρ.p Abstraction Operations.
//   Miser Theory Conception text file oLambda.txt version 0.0.1 dated
//   2024-06-20, available on the Internet as a version of
//   <https://orcmid.github.io/miser/lambda/oLambda.txt>
//
//--|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*
//
// TODO
//
// * Replace the boilerplate and introduce the operations.
//
//--|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*
//
// 0.0.1  2024-06-20T23:37Z First draft of Section 1, λ-Abstraction
// 0.0.0  2024-06-20T17:20Z Initial boilerplatwe from 0.3.2 oSigma.txt
//
//                         *** end of oLambda.txt ***
