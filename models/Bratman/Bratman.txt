Bratman.txt 0.0.7                     UTF-8                       dh:2017-12-06

                             The Miser Project Code
                             ======================
                            
        <https://github.com/orcmid/blob/master/models/Bratman/Bratman.txt>

           DEPICTION, ENGINEERING, AND VERIFICATION OF COMPUTATION

                                BRATMAN DIAGRAMS
                                ----------------
                                
    Bratman diagrams are employed to illustrate the process nature of 
    computation and how that is layered to produce higher-level activities
    such as transformation of procedures expressed in programming languages
    to programs for (more-) concrete computational processes.  
    
    The original Bratman approach is enriched to provide diagrammatic depiction
    of the bridge between abstractions that are manifest by choreographed
    computational operations.
      
                                  "A computational process ... cannot be seen
                                  or touched.  It is not composed of matter at
                                  all.  However, it is very real."
                                  
                                  -- Abelson and Sussman, Structure and 
                                     Interpretation of Computer Programs,
                                     p.1.
                                
BIBLIOGRAPHY

    Abelson, Harold., Sussman, Gerald Jay., Sussman, Julie (1996)
       Structure and Interpretation of Computer Programs, second edition.
       MIT Press (Cambridge, MA: 1996).  ISBN 0-262-01153-0.  Available on
       the Internet at <http://web.mit.edu/alexmv/6.037/sicp.pdf> and also
       <https://mitpress.mit.edu/sicp/full-text/book/book.html>.  The first
       five paragraphs of Chapter 1 are very much in the spirit that the
       Miser Project is intended to celebrate.  Focused on an essentially-
       applicative operation, oMiser is more elementary than LISP and the
       Scheme dialect used in SICP,
       <https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-9.html>.

    Bratman, Harvey (1961)
       An Alternate Form of the "UNCOL Diagram."  Comm. ACM 4, 3 (March 1961),
       p.142. Available at <http://doi.acm.org/10.1145/366199.366249>.  The
       inspiration for the Miser approach to situating computation as a
       mechanism/process.
       
    Early, Jay., Sturgis, Howard (1970)
       A formalism for Translator Interactions.  Comm. ACM 14, 10 (October
       1970), Available at <http://doi.acm.org/10.1145/355598.362740>. A 
       Bratman diagram reincarnation in a formalized approach.
         
MANIFEST

    Bratman.txt 
        this manifest and job-jar file
        
    i051101d1.vsdx, .svg, .png
        Diagrammatic presentation of computation as an operating process
        by which the computational procedure is enacted, not a fixed thing.
        Derived from <http://trosting.org/info/2005/11/i051101d.htm>.  Used in
        "Computation as Performance, Part 1: Engine Operation" on Golden Geek,
        <https://www.facebook.com/MiserProject/photos/a.1938469166367657.1073741828.1935440363337204/1981890868692153/>
        
    i051101d2.vsdx, .svg, .png
        Accounting for typical input-output case and labeling formats versus
        media.  Derived from <http://trosting.org/info/2005/11/i051101d.htm>.
        Used in "Computation as Performance, Part 2: Input-Output Encodings" at
        <https://www.facebook.com/MiserProject/photos/a.1938469166367657.1073741828.1935440363337204/1983094308571809/>
    
    i051101d3.vsdx, .svg, .png
        Making agreement between the input-output formats, I and O, and machine
        M.  Derived from <http://trosting.org/info/2005/11/i051101d.htm>.  Used
        in "Computation as Performance, Part 3: Balanced Coupling" at
        <https://www.facebook.com/MiserProject/photos/a.1938469166367657.1073741828.1935440363337204/1984391935108713/>
         
    i051101d4.vsdx, .svg, .png
        Levels of leveled abstractions, at the computing device level and at
        a level of usage, featuring interpretation and function.  New, used in
        "Computation as Performance, Part 4: Abstraction Leveling" at
        <https://www.facebook.com/MiserProject/photos/a.1938469166367657.1073741828.1935440363337204/1985273458353894/>
      
    i051101d5.vsdx, .svg, .png
        Turing Machines as cases of computational performance.  Adaptation for
        "Computation as Performance, Part 5: Turing Machine Functionality" at
        <https://www.facebook.com/MiserProject/photos/a.1938469166367657.1073741828.1935440363337204/1987340014813905/>
    
    i051101d6.vsdx, .svg, .pnt
        Adapted performance pattern for "Computation as Performance, Part 6:
        Frugal Read-Eval-Print Performance/Functionality" at
        <https://www.facebook.com/MiserProject/photos/a.1938469166367657.1073741828.1935440363337204/1989981994549707/>
        
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

                       Copyright 2017 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 
TODO
 
  * Complete the build-up to Bratman diagrams for illustrating the changes
    of abstraction that programming involves.
  
  * Connect to Numbering Peano, and TROSTing materials as
    they become available.
    
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 0.0.7 2017-12-06-16:03 Correct banner titles and refine abstraction remarks.
       Tie in "Computation as Performance, Part 6: Frugal Read-Eval-Print
       Performance/Functionality" on Golden Geek, adding i051101d6.
 0.0.6 2017-11-30-14:10 Tie in "Computation as Performance, Part 5: Turing
       Machine Functionality" on Golden Geek, adding i051101d5.
 0.0.5 2017-11-25-16:59 Tie in "Computation as Performance, Part 4: Abstraction 
       Leveling" on Golden Geek, adding i051101d4.
 0.0.4 2017-11-23-16:00 Tie in "Computation as Performance, Part 3: Balanced
       Coupling" on Golden Geek, adding i051101d3.
 0.0.3 2017-11-20-09:49 Tie to "Computation as Performance" tutorial material
       on Golden Geek, adding i051101d2.  
 0.0.2 2017-11-17-10:52 Add synopsis and annotated bibliography.  Manage
       TODOs.
 0.0.1 2017-11-17-09:58 Add i051101d1 diagram symbolizing machine processing
 0.0.0 2017-11-15-14:19 Create placeholder and initial job jar for the
       introduction of diagrammatic models important to the Miser Project
       and TROSTing.

                        ***** end of Bratman.txt *****