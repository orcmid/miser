theory.txt 0.0.2                     UTF-8                       dh:2020-07-06
----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                          MISER THEORETICAL CONCEPTION
                          ============================

               MISER STANDING IN THEORETICAL MODELS OF COMPUTATION
               ---------------------------------------------------

             <https://github.com/orcmid/miser/blob/master/theory.txt>

             If a result is important, you badly want to find different
             ways to see that fact; that's much safer.  If you have only
             one proof, and it contains an error, then you're left with
             nothing.  Having several proofs is not only safer, it gives
             you more insight, and it gives you more understanding.  After
             all, the real goal of mathematics is to obtain insight, not
             just proofs.
                                 -- Gregory Chaitin [Chaitin2005, p.25]

[SYNOPSIS: TBD]

[CONTENT: TBD]

REFERENCES AND BIBLIOGRAPHY

[Chaitin1998]
   Chaitin, Gregory J.  The Limits of Mathematics: A Course on Information
   Theory and the Limits of Formal Reasoning.  Springer (Singapore: 1998).
   ISBN 981-3083-59-X.  An objective in exploration of this material is using
   oMiser to demonstrate Algorithmic Information Theory, and its concrete
   cases, with sufficient translation of the version of LISP used by Chaitin.

[Chaitin1999]
   Chaitin, Gregory J.  The Unknowable.  Springer (Singapore: 1999).  ISBN
   981-4021-72-5.  This follow-in to [Chaitin1998] provides some additional
   support including application to incompleteness and the Turing halting
   problem.  These should have aligned demonstrations in the oMiser computa-
   tional model interpretation of ‹ob› obap.ap.

[Chaitin2005]
   Chaitin, Gregory J.  Meta Math!: the Quest for Omega.  Pantheon (New York:
   2005).  ISBN 0-375-42313-3.  Digging deeper into the nature of mathematics,
   computation, and scientific understanding.  We make no metaphysical
   commitments in our application of Chaitin's ideas and algorithmic
   information theory.

[Petzold2008]
   Petzold, Charles.  The Annotated Turing: A Guided Tour through Alan
   Turing's Historic Paper on Computability and the Turing Machine.  Wiley
   (Indianapolis: 2008).  ISBN 978-0-470-22905-7.  Written with great care,
   this treatment provides thoughtful context on Alan Turing, himself, and
   the world in which computation theory was introduced.  Fundamental sources
   are identified and accounted for in the narrative, which addresses the
   Church-Turing thesis and the differentiation of the computable along with
   recounting the puzzles concerning the situation of computation in the
   workings of the universe and the plight of humans knowing themselves.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

                     Copyright 2018, 2020 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

TODO

 * Find other TODOs of this nature and transpose them to this file.

 * Reconcile the inclusion, by some, of partial functions under the
   effectively-computable ones.  This seems to collide with the halting
   problem.  Check the treatment of the Church-Turing Thesis in SEP and also,
   possibly in Davis and maybe Rogers.

 * Recover the article on the completeness of cons, car, and cdr for appeal
   with respect to ob.c, ob.a, ob.b, and ob.e.  Make the bridge to the
   completeness with respect to effectively computable obs.

 * Identify the stages for establishment of universality.

 * Identify the confirmations, including lambda-calculus, Turing Machine,
   and other simulations.

 * It might not be here, but the relationship to the Backus FP and FFP may
   require some explanation as well.

 * Address the apparent distinction around flavors of interpretation.

 * Add Attribution entry

 * Determine whether logic.txt is needed for the reliance on mathematical
   logic and perhaps higher-order systems as well.

 * The common reliance on encoding and operating to within number theory
   (i.e., denumerable domains) is a matter for the reverse case.  That is,
   we can treat representation via encoding in oMiser as equivalent to
   encoding in PA, but more amenable to exposure of the stored-program
   principle and also simpler (but not easy or efficient) representations
   of other models in demonstration of Church-Turing computability.

 * Get the Church-Turing Thesis amalgamation in a clear manner.  Find
   accessible versions of core sources.  In particular, dismantle the
   attribution of Kleene as reducing Church-Turing Thesis to Turing
   Computability.

 * Find a characterization of Recursive Function Theory to allude to here.

 * Address emulation and the ability to emulate members of sets whose
   totalities are inaccessible, including those of greater cardinality than
   the denumerables.  We have fewer and fewer computable cases, yet these seem
   to be plentiful enough.

 * That the same object can be a representation in many ways (avoiding the
   temptation to say innumerable), what does that say about the computable?
   It would appear that the expression of representation as interpretation of
   a theory may somehow limit us to computability after all.

 * The situation of category theory here is problematic.  One can maybe talk
   ourselves up the ladder, but maybe not compute ourselved along the same
   route.  The treatment of classes tied to predicates might be revealing.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 0.0.2 2020-07-06-12:34 Add [Petzold2008] along with musings/notes on the
       topic here.
 0.0.1 2018-08-09-11:48 Add Chaitin material.  This is not primary, but an
       element of what to explore via the Miser Project.
 0.0.0 2018-04-17-13:25 Create placeholder, with starter TODOs on the
       connection of oMiser to computation theory.


                        *** end of theory.txt ***
